# recommendations.py
from typing import List

__all__ = ['generate_recommendations']

def generate_recommendations(commit: dict,
                             risk_proba: float,
                             repo_stats: dict,
                             feature_importances: dict) -> List[str]:
    recommendations: List[str] = []

    # –û—Ü–µ–Ω–∫–∞ –æ–±—â–µ–≥–æ —Ä–∏—Å–∫–∞
    if risk_proba > 0.8:
        recommendations.append(
            "‚ö†Ô∏è –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫: –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —É–≥–ª—É–±–ª—ë–Ω–Ω–æ–µ –∫–æ–¥-—Ä–µ–≤—å—é –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ."
        )
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º feature_importances —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–º —Ä–∏—Å–∫–µ
        if feature_importances:
            top_features = sorted(feature_importances.items(), key=lambda x: x[1], reverse=True)[:3]
            important_list = ', '.join(f"{feat}" for feat, _ in top_features)
            recommendations.append(
                f"üìå –ù–∞–∏–±–æ–ª—å—à–µ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä–∏—Å–∫ –æ–∫–∞–∑–∞–ª–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏: {important_list}."
            )
    elif risk_proba > 0.5:
        recommendations.append(
            "üîç –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫: –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç—ã."
        )

    # –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    msg_len = commit.get('message_length', 0)
    if msg_len < 15:
        recommendations.append("‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ: –¥–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π.")
    elif msg_len > 200:
        recommendations.append("üìù –û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Ä–∞–∑–¥–µ–ª–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ –ø—É–Ω–∫—Ç—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏.")

    # –ù–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∞–≥—Ñ–∏–∫—Å–∞)
    if commit.get('has_bug_keyword', 0):
        recommendations.append("üêû –í—ã—è–≤–ª–µ–Ω –±–∞–≥—Ñ–∏–∫—Å: —É–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.")

    # –û–±—ä—ë–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
    lines_added = commit.get('lines_added', 0)
    lines_deleted = commit.get('lines_deleted', 0)
    total = lines_added + lines_deleted
    stats_total = repo_stats.get('total_changes', {})
    mean_total = stats_total.get('mean')
    std_total = stats_total.get('std')
    if mean_total is not None and std_total is not None and total > mean_total + 2 * std_total:
        recommendations.append(
            f"üìä –û–±—ä—ë–º –∏–∑–º–µ–Ω–µ–Ω–∏–π ({total}) –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ ({mean_total:.1f}). "
            "–†–∞–∑–±–µ–π—Ç–µ –∫–æ–º–º–∏—Ç –Ω–∞ –±–æ–ª–µ–µ –º–µ–ª–∫–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —á–∞—Å—Ç–∏."
        )

    # –ß–∏—Å–ª–æ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤
    files_changed = commit.get('files_changed', 0)
    q95_files = repo_stats.get('files_changed', {}).get('quantile_95')
    if q95_files is not None and files_changed > q95_files:
        recommendations.append(
            f"üìÇ –ó–∞—Ç—Ä–æ–Ω—É—Ç–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤ ({files_changed} > 95% –∫–≤–∞–Ω—Ç–∏–ª—å). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π."
        )

    # –°–ª–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π
    complexity = commit.get('complexity_score', 0)
    q90_complex = repo_stats.get('complexity_score', {}).get('quantile_90')
    if q90_complex is not None and complexity > q90_complex:
        recommendations.append(
            f"üß© –í—ã—Å–æ–∫–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å ({complexity} > 90% –∫–≤–∞–Ω—Ç–∏–ª—å). "
            "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏."
        )

    # –ò—Å—Ç–æ—Ä–∏—è —Ñ–∞–π–ª–æ–≤
    avg_hist = commit.get('avg_file_history', 0)
    stats_hist = repo_stats.get('avg_file_history', {})
    mean_hist = stats_hist.get('mean')
    std_hist = stats_hist.get('std')
    if mean_hist is not None and std_hist is not None and avg_hist > mean_hist + 2 * std_hist:
        recommendations.append(
            f"üìà –§–∞–π–ª—ã —á–∞—Å—Ç–æ –º–µ–Ω—è—é—Ç—Å—è ({avg_hist:.1f} > {mean_hist:.1f} + 2œÉ). "
            "–í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å."
        )

    # –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–æ–º–º–∏—Ç–∞–º–∏
    interval = commit.get('minutes_since_previous_commit')
    median_int = repo_stats.get('commit_interval', {}).get('median')
    if interval is not None and median_int is not None:
        if interval < 5:
            recommendations.append("‚è± –û—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–π –∫–æ–º–º–∏—Ç (<5 –º–∏–Ω—É—Ç): —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã.")
        elif interval > 2 * median_int:
            recommendations.append(
                f"‚è≥ –ü—Ä–æ–º–µ–∂—É—Ç–æ–∫ {interval:.0f} –º–∏–Ω –±–æ–ª–µ–µ —á–µ–º –≤ 2 —Ä–∞–∑–∞ –¥–æ–ª—å—à–µ –º–µ–¥–∏–∞–Ω—ã "
                f"({median_int:.0f} –º–∏–Ω): –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –≤–µ—Ç–∫–∏ –ø–µ—Ä–µ–¥ —Å–ª–∏—è–Ω–∏–µ–º."
            )

    # –ü–æ–≤–µ–¥–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞
    author = commit.get('author_name', 'Unknown')
    median_lines_author = repo_stats.get('author_stats', {}).get(author, {}).get('median_lines_added')
    if median_lines_author is not None and lines_added > 2 * median_lines_author:
        recommendations.append(
            f"üë§ –ê–≤—Ç–æ—Ä {author} –≤–Ω—ë—Å {lines_added} —Å—Ç—Ä–æ–∫, —á—Ç–æ –±–æ–ª–µ–µ —á–µ–º –≤ 2 —Ä–∞–∑–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç "
            f"–µ–≥–æ –º–µ–¥–∏–∞–Ω–Ω—ã–µ {median_lines_author} —Å—Ç—Ä–æ–∫: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞."
        )

    # –ï—Å–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–µ –±—ã–ª–æ
    if not recommendations:
        recommendations.append("‚úÖ –Ø–≤–Ω—ã—Ö –∞–Ω–æ–º–∞–ª–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∫–æ–¥-—Ä–µ–≤—å—é –∏ –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏.")

    return recommendations
