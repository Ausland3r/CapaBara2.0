import re
from typing import List, Optional


class RecommendationGenerator:
    def __init__(self):
        pass

    def generate_repo_level_recommendations(self,
                                            repo_files: Optional[List[str]] = None,
                                            readme_content: Optional[str] = None) -> List[str]:
        recommendations = []
        readme_present = False
        if repo_files:
            readme_present = any('readme' in f.lower() for f in repo_files)

        if not readme_present:
            recommendations.append(
                "‚ÑπÔ∏è –í —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç README. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å README —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞."
            )

        return recommendations

    def generate_recommendations(self,
                                 commit: dict,
                                 risk_proba: float,
                                 repo_stats: dict,
                                 feature_importances: dict,
                                 repo_files: Optional[List[str]] = None,
                                 readme_content: Optional[str] = None) -> List[str]:
        recommendations: List[str] = []

        message = commit.get('message', '')
        author = commit.get('author_name', 'Unknown')
        lines_added = commit.get('lines_added', 0)
        files_changed = commit.get('files_changed', 0)
        complexity = commit.get('complexity_score', 0)
        interval = commit.get('minutes_since_previous_commit')
        has_bug_keyword = commit.get('has_bug_keyword', 0)

        if 'merge' in message.lower():
            recommendations.append(
                "‚ö†Ô∏è Merge-–∫–æ–º–º–∏—Ç—ã –ª—É—á—à–µ –¥–µ–ª–∞—Ç—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, squash –∏–ª–∏ fast-forward) –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —á—Ç–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏."
            )


        if re.search(r'[^\x00-\x7F]', message):
            recommendations.append(
                "‚ö†Ô∏è –í —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ ASCII.")

        if lines_added + commit.get('lines_deleted', 0) > 500 or files_changed > 20:
            recommendations.append(
                "‚ö†Ô∏è –ö–æ–º–º–∏—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑–±–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –±–æ–ª–µ–µ –º–µ–ª–∫–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —á–∞—Å—Ç–∏."
            )

        if len(message.strip()) < 10:
            recommendations.append("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ, –æ–Ω–æ –Ω–µ –¥–∞—ë—Ç –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.")

        if commit.get('author_name') != commit.get('committer_name', commit.get('author_name')):
            recommendations.append("‚ö†Ô∏è –ê–≤—Ç–æ—Ä –∏ –∫–æ–º–º–∏—Ç—Ç–µ—Ä –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.")

        if commit.get('tests_added', 0) == 0 and has_bug_keyword:
            recommendations.append(
                "‚ö†Ô∏è –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç—ã. –î–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")

        if any(f.lower().endswith(('.zip', '.pickle', '.exe', '.dll', '.bin')) for f in commit.get('files', [])):
            recommendations.append("‚ö†Ô∏è –í –∫–æ–º–º–∏—Ç–µ –µ—Å—Ç—å –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã. –õ—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å –±–∏–Ω–∞—Ä–Ω–∏–∫–∏ –≤–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.")

        if interval is not None and interval < 5:
            recommendations.append(
                "‚ö†Ô∏è –ö–æ–º–º–∏—Ç —Å–¥–µ–ª–∞–Ω —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ (–º–µ–Ω—å—à–µ 5 –º–∏–Ω—É—Ç). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–Ω–æ—Ç—É –∏ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π.")

        if risk_proba > 0.8:
            recommendations.append(
                "‚ö†Ô∏è –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫: —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∫–æ–¥-—Ä–µ–≤—å—é –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ."
            )
            if feature_importances:
                top_features = sorted(feature_importances.items(), key=lambda x: x[1], reverse=True)[:3]
                important_list = ', '.join(f"{feat}" for feat, _ in top_features)
                recommendations.append(
                    f"üìå –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞: {important_list}."
                )
        elif risk_proba > 0.5:
            recommendations.append(
                "üîç –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫: –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤."
            )

        msg_len = commit.get('message_length', 0)
        if msg_len < 15:
            recommendations.append("‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–æ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–µ–µ.")
        elif msg_len > 200:
            recommendations.append("üìù –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –∫–æ—Ä–æ—á–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–µ–µ.")

        if has_bug_keyword:
            recommendations.append(
                "üêû –ù–∞–π–¥–µ–Ω –±–∞–≥—Ñ–∏–∫—Å: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.")

        stats_total = repo_stats.get('total_changes', {})
        mean_total = stats_total.get('mean')
        std_total = stats_total.get('std')
        total = lines_added + commit.get('lines_deleted', 0)
        if mean_total is not None and std_total is not None and total > mean_total + 2 * std_total:
            recommendations.append(
                f"üìä –û–±—ä—ë–º –∏–∑–º–µ–Ω–µ–Ω–∏–π ({total}) –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª—å—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ ({mean_total:.1f}). –†–∞–∑–±–µ–π—Ç–µ –∫–æ–º–º–∏—Ç –Ω–∞ —á–∞—Å—Ç–∏."
            )

        q95_files = repo_stats.get('files_changed', {}).get('quantile_95')
        if q95_files is not None and files_changed > q95_files:
            recommendations.append(
                f"üìÇ –ò–∑–º–µ–Ω–µ–Ω–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤ ({files_changed} > 95-–π –ø—Ä–æ—Ü–µ–Ω—Ç–∏–ª—å). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π."
            )

        q90_complex = repo_stats.get('complexity_score', {}).get('quantile_90')
        if q90_complex is not None and complexity > q90_complex:
            recommendations.append(
                f"üß© –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–µ ({complexity} > 90-–π –ø—Ä–æ—Ü–µ–Ω—Ç–∏–ª—å). –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã."
            )

        stats_hist = repo_stats.get('avg_file_history', {})
        mean_hist = stats_hist.get('mean')
        std_hist = stats_hist.get('std')
        avg_hist = commit.get('avg_file_history', 0)
        if mean_hist is not None and std_hist is not None and avg_hist > mean_hist + 2 * std_hist:
            recommendations.append(
                f"üìà –§–∞–π–ª—ã –º–µ–Ω—è—é—Ç—Å—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ ({avg_hist:.1f} > {mean_hist:.1f} + 2œÉ). –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å."
            )

        median_int = repo_stats.get('commit_interval', {}).get('median')
        if interval is not None and median_int is not None:
            if interval < 5:
                recommendations.append(
                    "‚è± –ö–æ–º–º–∏—Ç —Å–¥–µ–ª–∞–Ω –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ (–º–µ–Ω—å—à–µ 5 –º–∏–Ω—É—Ç). –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω—ã –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã."
                )
            elif interval > 2 * median_int:
                recommendations.append(
                    f"‚è≥ –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–æ–º–º–∏—Ç–∞–º–∏ {interval:.0f} –º–∏–Ω ‚Äî –±–æ–ª–µ–µ —á–µ–º –≤ –¥–≤–∞ —Ä–∞–∑–∞ –±–æ–ª—å—à–µ –º–µ–¥–∏–∞–Ω—ã ({median_int:.0f} –º–∏–Ω). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –≤–µ—Ç–∫–∏."
                )

        median_lines_author = repo_stats.get('author_stats', {}).get(author, {}).get('median_lines_added')
        if median_lines_author is not None and lines_added > 2 * median_lines_author:
            recommendations.append(
                f"üë§ –ê–≤—Ç–æ—Ä {author} –≤–Ω—ë—Å {lines_added} —Å—Ç—Ä–æ–∫ ‚Äî —ç—Ç–æ –±–æ–ª–µ–µ —á–µ–º –≤ 2 —Ä–∞–∑–∞ –≤—ã—à–µ –µ–≥–æ –æ–±—ã—á–Ω–æ–≥–æ –æ–±—ä—ë–º–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–µ–≤—å—é."
            )

        if not recommendations:
            recommendations.append(
                "‚úÖ –Ø–≤–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∫–æ–¥-—Ä–µ–≤—å—é –∏ –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏.")

        return recommendations
